(function(e) {
    e.sep_grid_refresh = function() {
        e(".pxl-grid-masonry").each(function() {
            $thisMasonry = e(this);
            var n, s, o, t = new Isotope(this, {
                    itemSelector: ".pxl-grid-item",
                    layoutMode: e(this).closest(".pxl-grid").attr("data-layout"),
                    percentPosition: !0,
                    masonry: {
                        columnWidth: ".grid-sizer"
                    },
                    containerStyle: null,
                    stagger: 30,
                    sortBy: "name"
                }),
                i = e(this).parent().find(".pxl-grid-filter");
            i.on("click", function(n) {
                var o, i, s = n.target.getAttribute("data-filter");
                t.arrange({
                    filter: s
                }), o = t.filteredItems, i = t.options.filter, i === s && o.length === 0 ? e(this).parent().find(".pxl-grid-no-results").show() : e(this).parent().find(".pxl-grid-no-results").hide()
            }), n = e(this).parent().find(".filter-item"), n.on("click", function() {
                n.removeClass("active"), e(this).addClass("active")
            }), s = e(this).parent().find(".pxl-grid-filter"), s.change(function() {
                var n = e(this).val();
                t.arrange({
                    filter: n
                })
            }), o = e(this).parent().find(".pxl-grid-filter"), o.change(function() {
                var n = e(this).val();
                n == "asc" && t.arrange({
                    sortAscending: !1
                }), n == "des" && t.arrange({
                    sortAscending: !0
                })
            }), r($thisMasonry, t)
        })
    };

    function t() {
        e(".pxl-service-grid .item--icon img").each(function() {
            var e = jQuery(this),
                t = e.attr("id"),
                n = e.attr("class"),
                s = e.attr("src");
            s && setTimeout(function() {
                jQuery.get(s, function(s) {
                    var o = jQuery(s).find("svg");
                    t && o.attr("id", t), n && o.attr("class", n + " replaced-svg"), o.removeAttr("xmlns:a"), !o.attr("viewBox") && o.attr("height") && o.attr("width") && o.attr("viewBox", "0 0 24 24"), e.replaceWith(o)
                }, "xml")
            }, 500)
        })
    }

    function n() {
        function n(t, n) {
            var s = e(n).width(),
                o = e(n).height(),
                i = (t.pageX - e(n).offset().left - s / 2) * (s > o ? o / s : 1),
                a = (t.pageY - e(n).offset().top - o / 2) * (o > s ? s / o : 1),
                r = Math.round(Math.atan2(a, i) / 1.57079633 + 5) % 4;
            return r
        }

        function t(t, s, o) {
            var a = n(t, s),
                i = null;
            switch (e(s).removeAttr("class"), a) {
                case 0:
                    i = "--top";
                    break;
                case 1:
                    i = "--right";
                    break;
                case 2:
                    i = "--bottom";
                    break;
                case 3:
                    i = "--left";
                    break
            }
            e(s).addClass(o + i)
        }
        e.fn.ctDeriction = function() {
            this.each(function() {
                e(this).on("mouseenter", function(e) {
                    t(e, this, "pxl-in")
                }), e(this).on("mouseleave", function(e) {
                    t(e, this, "pxl-out")
                })
            })
        }, e(".pxl-effect--3d .pxl-effect--direction").ctDeriction()
    }

    function s(t, n) {
        selectedFilters = [];
        var s, o, i, a = t.find(".active");
        a.each(function() {
            selectedFilters.push(e(this).data("filter"))
        }), s = selectedFilters.join("") + ".price-show", n.arrange({
            filter: s
        }), o = n.filteredItems, i = n.options.filter, i === s && o.length === 0 ? t.find(".pxl-grid-no-results").show() : t.find(".pxl-grid-no-results").hide()
    }

    function i(t, n, o, i, a) {
        n.each(function() {
            var t = parseInt(e(this).data("price")),
                n = parseInt(i.val()),
                s = parseInt(a.val());
            t >= n && t <= s ? e(this).addClass("price-show") : e(this).removeClass("price-show")
        }), s(t, o)
    }

    function r(t, n) {
        t.closest(".pxl-product-grid").each(function() {
            var o, a, r, c, l, u, t = e(this),
                m = [],
                d = t.find(".pxl-grid-item");
            t.on("click", ".pxl-sidebar-area .widget_product_categories .cat-item", function(o) {
                var i = e(this).data("filter");
                o.preventDefault(), e(this).toggleClass("active"), s(t, n)
            }), t.on("click", ".widget_price_filter .price_slider_amount button", function(e) {
                e.preventDefault(), s(t, n), h()
            }), t.on("click", ".pxl-sidebar-area .widget_layered_nav .wc-layered-nav-term", function() {
                e(this).toggleClass("active"), s(t, n)
            }), t.on("click", ".pxl-sidebar-area .widget_product_tag_cloud .tag-cloud-link", function(o) {
                var i = e(this).data("filter");
                o.preventDefault(), e(this).toggleClass("active"), s(t, n)
            }), l = t.find(".widget_price_filter .price_slider"), o = parseInt(t.find(".widget_price_filter").data("price-min")), a = parseInt(t.find(".widget_price_filter").data("price-max")), r = t.find('.widget_price_filter .price_slider_amount input[name="min_price"]'), c = t.find('.widget_price_filter .price_slider_amount input[name="max_price"]'), u = t.find(".widget_price_filter .price_slider_amount button"), l.slider({
                range: !0,
                min: o,
                max: a,
                values: [o, a],
                slide: function(s, o) {
                    r.val(o.values[0]), c.val(o.values[1]), e(this).parent().find(".price_label .from").html("$" + o.values[0]), e(this).parent().find(".price_label .to").html("$" + o.values[1]), i(t, d, n, r, c)
                }
            }), u.on("click", function(e) {
                e.preventDefault(), i(t, d, n, r, c), h(), i(t, d, n, r, c)
            });

            function h() {
                r.val(o), c.val(a), l.slider("values", [o, a]), l.parent().find(".price_label .from").html("$" + o), l.parent().find(".price_label .to").html("$" + a)
            }
            u.click()
        })
    }
    var a, o = function(e, s) {
        s(".pxl-grid-masonry").imagesLoaded(function() {
            window.elementorFrontend.isEditMode() || (s.sep_grid_refresh(), t(), n())
        })
    };
    e(document).ajaxComplete(function() {
        "use strict";
        e(document).on("click", ".pxl-grid-filter .filter-item", function() {
            e(this).siblings(".filter-item").removeClass("active"), e(this).addClass("active")
        })
    }), e(document).on("click", ".pxl-load-more", function() {
        var o = e(this).data("loadmore"),
            i = o.perpage,
            s = e(this).parents(".pxl-grid"),
            r = s.data("layout"),
            a = e(this).data("loading-text"),
            c = e(this).data("loadmore-text");
        o.paged = parseInt(s.data("start-page")) + 1, e(this).addClass("loading"), e(this).find(".pxl-btn-icon").addClass("loading"), e(this).find(".pxl-btn-text").text(a), e(".pxl-grid").find(".pxl-grid-no-results").hide(), e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_load_more_post_grid",
                settings: o
            }
        }).done(function(o) {
            o.data.posts.length > 0 && (s.find(".pxl-grid-inner").append(o.data.html), s.data("start-page", o.data.paged), e(".pxl-grid-masonry").imagesLoaded(function() {
                e.sep_grid_refresh(), t(), n()
            })), o.data.posts.length > i ? s.data("start-page", o.data.paged) : s.find(".btn").hide()
        }).fail(function() {
            return s.find(".btn").hide(), !1
        }).always(function() {
            return !1
        })
    }), e(document).on("click", ".pxl-grid-pagination .ajax a.page-numbers", function() {
        var r, s = e(this).parents(".pxl-grid"),
            o = s.find(".pxl-grid-pagination").data("loadmore"),
            a = s.find(".pxl-grid-pagination").data("query"),
            c = s.data("layout"),
            i = e(this).attr("href"),
            i = i.replace("#", "");
        return o.paged = parseInt(i), a.paged = parseInt(i), r = o.pagin_align_cls, e("#pxl-main").addClass("pxl-ajax-loading"), e(".pxl-grid").find(".pxl-grid-no-results").hide(), e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_get_pagination_html",
                query_vars: a,
                settings: o,
                cls: r
            }
        }).done(function(e) {
            e.status == !0 && s.find(".pxl-grid-pagination").html(e.data.html)
        }).fail(function() {
            return !1
        }).always(function() {
            return !1
        }), e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_load_more_post_grid",
                settings: o
            }
        }).done(function(o) {
            o.status == !0 && (e("#pxl-main").removeClass("pxl-ajax-loading"), s.find(".pxl-grid-inner .pxl-grid-item").remove(), s.find(".pxl-grid-inner").append(o.data.html), s.data("start-page", o.data.paged), s.find(".pxl-grid-masonry").imagesLoaded(function() {
                e.sep_grid_refresh(), t(), n()
            }))
        }).fail(function() {
            return e("#pxl-main").removeClass("pxl-ajax-loading"), !1
        }).always(function() {
            return !1
        }), !1
    }), a = function(e, t) {
        t(".pxl-product-grid .pxl-grid-masonry").imagesLoaded(function() {
            t.sep_grid_refresh()
        })
    }, e(document).on("click", ".btn-product-grid-loadmore", function() {
        var o = e(this).parents(".pxl-load-more").data("loadmore"),
            s = e(this).parents(".pxl-grid"),
            r = s.data("layout-mode"),
            i = e(this).parents(".pxl-load-more").data("loading-text"),
            a = e(this).parents(".pxl-load-more").data("loadmore-text");
        o.paged = parseInt(s.data("start-page")) + 1, e(this).addClass("loading"), e(this).find(".btn-text").text(i), e(".pxl-grid").find(".pxl-grid-no-results").hide(), e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_load_more_product_grid",
                settings: o
            }
        }).done(function(o) {
            o.status == !0 ? (s.find(".btn-product-grid-loadmore").removeClass("loading"), s.find(".pxl-grid-inner").append(o.data.html), s.data("start-page", o.data.paged), s.find(".btn-text").text(a), e(".pxl-grid-masonry").imagesLoaded(function() {
                e.sep_grid_refresh(), t(), n()
            }), o.data.paged >= o.data.max && s.find(".pxl-load-more").hide()) : s.find(".pxl-load-more").hide()
        }).fail(function() {
            return s.find(".pxl-load-more").hide(), !1
        }).always(function() {
            return !1
        })
    }), e(document).on("click", ".pxl-grid-pagination.pagin-product .ajax a.page-numbers", function(s) {
        s.preventDefault();
        var c, l, o = e(this).parents(".pxl-grid"),
            d = o.data("layout-mode"),
            a = o.find(".pxl-grid-pagination").data("loadmore"),
            r = o.find(".pxl-grid-pagination").data("query"),
            u = o.data("layout"),
            i = e(this).attr("href"),
            i = i.replace("#", "");
        return a.paged = parseInt(i), r.paged = parseInt(i), c = a.pagin_align_cls, e(".pxl-grid").find(".pxl-grid-no-results").hide(), l = !1, e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_get_pagination_html",
                query_vars: r,
                cls: c
            }
        }).done(function(e) {
            e.status == !0 && o.find(".pxl-grid-pagination").html(e.data.html)
        }).fail(function() {
            return !1
        }).always(function() {
            return l = !0, !1
        }), e.ajax({
            url: main_params.ajax_url,
            type: "POST",
            beforeSend: function() {},
            data: {
                action: "kimono_load_more_product_grid",
                settings: a
            }
        }).done(function(s) {
            s.status == !0 && (o.find(".pxl-grid-inner").html(s.data.html), o.data("start-page", s.data.paged), o.find(".pxl-grid-masonry").imagesLoaded(function() {
                e.sep_grid_refresh(), t(), n()
            })), e(document).off("mousewheel DOMMouseScroll")
        }).fail(function() {
            return !1
        }).always(function() {
            return !1
        }), !1
    });

    function c() {
        const e = document.querySelectorAll(".pxl-package-grid .filter-item"),
            t = document.querySelectorAll(".pxl-package-grid .pxl-grid-item");
        e.forEach(n => {
            n.addEventListener("click", function() {
                const n = this.getAttribute("data-filter");
                console.log(n), t.forEach(e => {
                    n === "*" || e.getAttribute("data-filter").includes(n) ? l(e) : d(e)
                }), e.forEach(e => {
                    e.classList.remove("active")
                }), this.classList.add("active")
            })
        })
    }

    function l(e) {
        e.classList.remove("hide"), e.classList.add("visible"), e.style.opacity = 1
    }

    function d(e) {
        e.style.opacity = 0, setTimeout(() => {
            e.classList.remove("visible"), e.classList.add("hide")
        }, 300)
    }
    document.addEventListener("DOMContentLoaded", function() {
        c()
    }), e(window).on("elementor/frontend/init", function() {
        elementorFrontend.hooks.addAction("frontend/element_ready/pxl_post_grid.default", o), elementorFrontend.hooks.addAction("frontend/element_ready/pxl_team_grid.default", o), elementorFrontend.hooks.addAction("frontend/element_ready/pxl_partner_grid.default", o), elementorFrontend.hooks.addAction("frontend/element_ready/pxl_gallery_grid.default", o), elementorFrontend.hooks.addAction("frontend/element_ready/pxl_product_grid.default", a)
    })
})(jQuery)