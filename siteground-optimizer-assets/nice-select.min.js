(function(e) {
    e.fn.niceSelect = function(t) {
        if (typeof t == "string") return t == "update" ? this.each(function() {
            var s = e(this),
                t = e(this).next(".nice-select"),
                o = t.hasClass("open");
            t.length && (t.remove(), n(s), o && s.next().trigger("click"))
        }) : t == "destroy" ? (this.each(function() {
            var n = e(this),
                t = e(this).next(".nice-select");
            t.length && (t.remove(), n.css("display", ""))
        }), e(".nice-select").length == 0 && e(document).off(".nice_select")) : console.log('Method "' + t + '" does not exist.'), this;
        this.hide(), this.each(function() {
            var t = e(this);
            t.next().hasClass("nice-select") || n(t)
        });

        function n(t) {
            t.after(e("<div></div>").addClass("nice-select").addClass(t.attr("class") || "").addClass(t.attr("disabled") ? "disabled" : "").attr("tabindex", t.attr("disabled") ? null : "0").html('<span class="current"></span><ul class="list"></ul>'));
            var n = t.next(),
                o = t.find("option"),
                s = t.find("option:selected");
            n.find(".current").html(s.data("display") || s.text()), o.each(function() {
                var s = e(this),
                    o = s.data("display");
                n.find("ul").append(e("<li></li>").attr("data-value", s.val()).attr("data-display", o || null).addClass("option" + (s.is(":selected") ? " selected" : "") + (s.is(":disabled") ? " disabled" : "")).html(s.text()))
            })
        }
        e(document).off(".nice_select"), e(document).on("click.nice_select", ".nice-select", function() {
            var n = e(this);
            e(".nice-select").not(n).removeClass("open"), n.toggleClass("open"), n.hasClass("open") ? (n.find(".option"), n.find(".focus").removeClass("focus"), n.find(".selected").addClass("focus")) : n.focus()
        }), e(document).on("click.nice_select", function(t) {
            e(t.target).closest(".nice-select").length === 0 && e(".nice-select").removeClass("open").find(".option")
        }), e(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function() {
            var o, n = e(this),
                s = n.closest(".nice-select");
            s.find(".selected").removeClass("selected"), n.addClass("selected"), o = n.data("display") || n.text(), s.find(".current").text(o), s.prev("select").val(n.data("value")).trigger("change")
        }), e(document).on("keydown.nice_select", ".nice-select", function(t) {
            var o, i, n = e(this),
                s = e(n.find(".focus") || n.find(".list .option.selected"));
            if (t.keyCode == 32 || t.keyCode == 13) return n.hasClass("open") ? s.trigger("click") : n.trigger("click"), !1;
            if (t.keyCode == 40) return n.hasClass("open") ? (o = s.nextAll(".option:not(.disabled)").first(), o.length > 0 && (n.find(".focus").removeClass("focus"), o.addClass("focus"))) : n.trigger("click"), !1;
            if (t.keyCode == 38) return n.hasClass("open") ? (i = s.prevAll(".option:not(.disabled)").first(), i.length > 0 && (n.find(".focus").removeClass("focus"), i.addClass("focus"))) : n.trigger("click"), !1;
            if (t.keyCode == 27) n.hasClass("open") && n.trigger("click");
            else if (t.keyCode == 9 && n.hasClass("open")) return !1
        });
        var s = document.createElement("a").style;
        return s.cssText = "pointer-events:auto", s.pointerEvents !== "auto" && e("html").addClass("no-csspointerevents"), this
    }
})(jQuery)