(function(e) {
    "use strict";
    var t, n, s, i = "",
        p = 0;
    e(window).on("load", function() {
        t = e(window).scrollTop(), s = e(window).width(), n = e(window).height(), w(), d(), u(), h(), m(), b(), A(), O(), g(), c(), o(), v(), r(), x(), C(), k(), f(), setTimeout(function() {
            a()
        }, 500)
    }), e(window).on("resize", function() {
        s = e(window).width(), n = e(window).height(), a(), o(), f()
    }), e(window).on("scroll", function() {
        t = e(window).scrollTop(), s = e(window).width(), n = e(window).height(), t < p ? i = "up" : i = "down", p = t, d(), u(), h(), c(), S(), e(".page-section").each(function(n) {
            e(this).position().top <= t + 50 && (e(".pxl-header-elementor-main .pxl-menu-primary > li > a.page-active").removeClass("page-active"), e(".pxl-header-elementor-sticky .pxl-nav-menu .pxl-menu-primary > li > a.page-active").removeClass("page-active"), e(".pxl-header-elementor-main .pxl-menu-primary > li > a").eq(n).addClass("page-active"), e(".pxl-header-elementor-sticky .pxl-nav-menu .pxl-menu-primary > li > a").eq(n).addClass("page-active"))
        })
    }), e(document).ready(function() {
        _(), setTimeout(function() {
            j()
        }, 700), E(), setTimeout(() => {
            if (window.innerWidth > 767) {
                var e = document.querySelectorAll(".pxl-heading .breathing .pxl-title--highlight");
                e.forEach(function(t) {
                    var s = t.innerText.split("");
                    setTimeout(function() {
                        t.classList.remove("animating")
                    }, (s.length + 1) * 50), t.innerText = "", s.forEach(function(n, s) {
                        const o = e.length,
                            i = s - o / 2,
                            a = i * .15 + "s";
                        n == " " && (n = "&nbsp;"), t.innerHTML += '<span class="letter" style="animation-delay: ' + a + ';">' + n + "</span>"
                    })
                })
            }
        }, 100);
        var t, n, s, o, i, a, r, c, l, d, u, m, f, p = e(".pxl-divider-border .pxl-divider-border-top");

        function g() {
            p.toggleClass("pause")
        }
        setInterval(g, 1e3), d = e(".pxl-header-elementor-main"), d.find(".pxl-menu-primary li").each(function() {
            var t = e(this).find("> ul.sub-menu");
            t.length == 1 && e(this).hover(function() {
                t.offset().left + t.width() > e(window).width() ? t.addClass("pxl-sub-reverse") : t.offset().left < 0 && t.addClass("pxl-sub-reverse")
            }, function() {
                t.removeClass("pxl-sub-reverse")
            })
        }), e(".pxl-header-menu li.menu-item-has-children, .pxl-menu-primary li.menu-item-has-children").append('<span class="pxl-menu-toggle"></span>'), e(".pxl-menu-toggle").on("click", function() {
            e(this).hasClass("active") ? (e(this).closest("ul").find(".pxl-menu-toggle.active").toggleClass("active"), e(this).closest("ul").find(".sub-menu.active").toggleClass("active").slideToggle(), e(this).closest("ul").find("a.active").toggleClass("active")) : (e(this).closest("ul").find(".pxl-menu-toggle.active").toggleClass("active"), e(this).closest("ul").find(".sub-menu.active").toggleClass("active").slideToggle(), e(this).closest("ul").find("a.active").toggleClass("active"), e(this).toggleClass("active"), e(this).parent().find("> .sub-menu").toggleClass("active"), e(this).parent().find("> .sub-menu").slideToggle(), e(this).parent().find("> a").toggleClass("active"))
        }), e(".menu-vertical .sub-menu > li > a").on("click", function() {
            e(this).toggleClass("active"), e(this).closest("li").find("> .pxl-menu-toggle").toggleClass("active"), e(this).closest("li").find("> .sub-menu").toggleClass("active"), e(this).closest("li").find("> .sub-menu").slideToggle()
        }), e(".menu-vertical > li > a").on("click", function() {
            e(this).hasClass("active") ? (e(this).closest("ul").find(".pxl-menu-toggle.active").toggleClass("active"), e(this).closest("ul").find(".sub-menu.active").toggleClass("active").slideToggle(), e(this).closest("ul").find("a.active").toggleClass("active")) : (e(this).closest("ul").find(".pxl-menu-toggle.active").toggleClass("active"), e(this).closest("ul").find(".sub-menu.active").toggleClass("active").slideToggle(), e(this).closest("ul").find("a.active").toggleClass("active"), e(this).toggleClass("active"), e(this).parents("li").find("> .pxl-menu-toggle").toggleClass("active"), e(this).parents("li").find("> .sub-menu").toggleClass("active"), e(this).parents("li").find("> .sub-menu").slideToggle())
        }), e("#pxl-nav-mobile").on("click", function() {
            e(this).toggleClass("active"), e(".pxl-header-menu").toggleClass("active")
        }), e(".pxl-menu-close, .pxl-header-menu-backdrop").on("click", function() {
            e(this).parents(".pxl-header-main").find(".pxl-header-menu").removeClass("active"), e("#pxl-nav-mobile").removeClass("active")
        }), e("div").hasClass("px-header--transparent") && e("#pxl-wapper").css({
            position: "relative"
        }), e(".pxl-scroll-top").click(function() {
            return e("html, body").animate({
                scrollTop: 0
            }), !1
        }), e(".pxl-grid-masonry").each(function() {
            var t = 100,
                s = e(this).children().length,
                n = s - 1;
            e(this).find("> .pxl-grid-item > .wow").each(function(o) {
                e(this).css("animation-delay", t + "ms"), n === o ? (t = 100, n = n + s) : t = t + 60
            })
        }), e(".pxl-item--text").each(function() {
            var t = 0,
                s = e(this).children().length,
                n = s - 1;
            e(this).find("> .pxl-text--slide > .wow").each(function(o) {
                e(this).css("transition-delay", t + "ms"), n === o ? (t = 0, n = n + s) : t = t + 80
            })
        }), e(".pxl-nice-select, .woocommerce .woocommerce-ordering .orderby, #wp-block-archives-1, #wp-block-categories-1, .woocommerce div.product form.cart .variations select, #pxl-sidebar-area select").each(function() {
            e(this).niceSelect()
        }), t = e(".comment-respond .form-submit input.submit"), m = e("<button>", {
            name: t.attr("name"),
            id: t.attr("id"),
            class: t.attr("class"),
            type: t.attr("type"),
            text: t.val()
        }), t.replaceWith(m);
        const h = e(".pxl-related-post .pxl-related-post-inner, .pxl-related-portfolio .pxl-related-post-inner");
        h.slick({
            dots: !1,
            infinite: !0,
            arrows: !1,
            slidesToShow: 3,
            slidesToScroll: 1,
            autoplay: !1,
            autoplaySpeed: 2e3,
            cssEase: "linear",
            responsive: [{
                breakpoint: 992,
                settings: {
                    slidesToShow: 2
                }
            }, {
                breakpoint: 768,
                settings: {
                    slidesToShow: 1
                }
            }]
        }), e("body").hasClass("rtl") && h.slick("slickSetOption", "rtl", !0), e(".widget.widget_search input").attr("required", !0), e(".woocommerce .woocommerce-summary-wrap.row.style1").parents(".product").addClass("pxl-product-page-style1"), e(".woocommerce .woocommerce-summary-wrap.row.style2").parents(".product").addClass("pxl-product-page-style2"), e(".woocommerce .pxl-wapper #pxl-main .pxl-content-product .woosc-quick-table").remove(), e(".woocommerce ul.products li.product > .woosc-btn, .woocommerce ul.products li.product > .woosq-btn, .woocommerce ul.products li.product > .woosw-btn").remove(), e(".single-product #primary div.product .entry-summary > button").remove(), e(".add_to_cart_button").attr("title", "Add To Cart"), e(".product_type_grouped").attr("title", "View Product"), e(".product_type_external").attr("title", "Shop Now"), e(".woosw-btn").attr("title", "Add To Wishlist"), e(".woosq-btn").attr("title", "Quick View"), e(".woosc-btn").attr("title", "Compare"), e(".woocommerce-shop .widget_layered_nav .wc-layered-nav-term").on("click", function() {
            e(this).addClass("active").siblings("li").removeClass("active")
        }), e("form").hasClass("woocommerce-form woocommerce-form-login login") && (c = e(this).find('label[for="username"]').text().trim().toUpperCase(), e(this).find('label[for="username"]').text(""), e(this).find("#username").attr("placeholder", c), l = e(this).find('label[for="password"]').text().trim().toUpperCase(), e(this).find('label[for="password"]').text(""), e(this).find("#password").attr("placeholder", l)), e(".woocommerce-Price-currencySymbol").each(function() {
            var n, t = e(this),
                s = t.text();
            t.text(""), n = s.trim() + " ", t.html(n)
        }), s = e(".woocommerce .product.pxl-product-page-style2"), a = s.find(".woocommerce-tabs.wc-tabs-wrapper"), i = a.clone(), a.remove(), s.find(".woocommerce-summary-wrap .woocommerce-gallery + div").append(i), u = [{
            tabName: "description_tab",
            panelClass: "woocommerce-Tabs-panel--description"
        }, {
            tabName: "additional_information_tab",
            panelClass: "woocommerce-Tabs-panel--additional_information"
        }, {
            tabName: "tab-product-feature_tab",
            panelClass: "woocommerce-Tabs-panel--tab-product-feature"
        }, {
            tabName: "reviews_tab",
            panelClass: "woocommerce-Tabs-panel--reviews"
        }], e.each(u, function(e, t) {
            var n = s.find(".wc-tabs ." + t.tabName),
                o = i.find(".woocommerce-Tabs-panel." + t.panelClass).clone();
            i.find(".woocommerce-Tabs-panel." + t.panelClass).remove(), n.append(o)
        }), n = e("#pxl-search-popup"), o = e("#pxl-search-popup .search-field"), r = e("body"), e(".pxl-search-popup-button").on("click", function(e) {
            return n.hasClass("active") ? o.val() === "" && (n.removeClass("active"), o.get(0).focus()) : (n.addClass("active"), setTimeout(function() {
                o.get(0).focus()
            }, 500)), e.preventDefault(), !1
        }), e("#pxl-search-popup .pxl-item--overlay, #pxl-search-popup .pxl-item--close").on("click", function(e) {
            return r.addClass("pxl-search-out-anim"), setTimeout(function() {
                r.removeClass("pxl-search-out-anim")
            }, 600), setTimeout(function() {
                n.removeClass("active")
            }, 600), e.preventDefault(), !1
        }), e(".btn-video, .pxl-video-popup").magnificPopup({
            type: "iframe",
            mainClass: "mfp-fade",
            removalDelay: 160,
            preloader: !1,
            fixedContentPos: !1
        }), e(".pxl-nav-button").on("click", function() {
            e(this).toggleClass("active"), e(this).parent().find(".pxl-nav-wrap").toggle(400)
        }), e(".wpcf7-select").each(function() {
            var n, s, o, i, t = e(this),
                a = e(this).children("option").length;
            t.addClass("pxl-select-hidden"), t.wrap('<div class="pxl-select"></div>'), t.after('<div class="pxl-select-higthlight"></div>'), n = t.next("div.pxl-select-higthlight"), n.text(t.children("option").eq(0).text());
            for (o = e("<ul />", {
                    class: "pxl-select-options"
                }).insertAfter(n), s = 0; s < a; s++) e("<li />", {
                text: t.children("option").eq(s).text(),
                rel: t.children("option").eq(s).val()
            }).appendTo(o);
            i = o.children("li"), n.click(function(t) {
                t.stopPropagation(), e("div.pxl-select-higthlight.active").not(this).each(function() {
                    e(this).removeClass("active").next("ul.pxl-select-options").addClass("pxl-select-lists-hide")
                }), e(this).toggleClass("active")
            }), i.click(function(s) {
                s.stopPropagation(), n.text(e(this).text()).removeClass("active"), t.val(e(this).attr("rel"))
            }), e(document).click(function() {
                n.removeClass("active")
            })
        }), e("a, input, button, .pxl-transtion").on("mouseover", function() {
            e(this).addClass("pxl-hover-transition")
        }), e(".pxl-switch-button").on("mouseover", function() {
            e("a, input, button, .pxl-transtion").removeClass("pxl-hover-transition"), e(".pxl-scroll-top").removeClass("pxl-hover-transition")
        }), e(".pxl-parent-transition").each(function() {
            e(this).find(".pxl-transtion").addClass("pxl-hover-transition"), e(this).hover(function() {
                e(this).find(".pxl-transtion").addClass("pxl-hover-transition")
            }), e(".pxl-switch-button").on("mouseover", function() {
                e(this).find(".pxl-transtion").removeClass("pxl-hover-transition")
            })
        }), e(".pxl-pricing1").each(function() {
            e(this).hover(function() {
                e(this).parents(".elementor-element").find(".pxl-pricing1").removeClass("is-popular"), e(this).addClass("is-popular")
            })
        }), e(".btn-default").each(function() {
            var n = 0,
                s = 0,
                t = e(this).find("svg path");
            e(this).mousemove(function(n) {
                var s = e(this).offset(),
                    o = n.pageX - s.left,
                    i = n.pageY - s.top,
                    r = o - e(this).width() / 2,
                    c = i - e(this).height() / 2,
                    a = "scale(" + (1 + (o + i) / (e(this).width() + e(this).height())) + ")";
                t.css("transform", a)
            }), e(this).mouseleave(function() {
                t.css("transform", "none")
            })
        }), e(".pxl-neon-glow").each(function(t) {
            var n, s, o, i, a, r = e(this).find("strong");
            r.each(function() {
                for (var n = e(this).text(), s = "", t = 0; t < n.length; t++) s += '<span class="highlight">' + n[t] + "</span>";
                e(this).html(s)
            }), n = e(this).css("color"), o = "pxl_neon_glows_" + t, s = "3px", i = "@keyframes " + o + " { 0% { color: " + n + "; text-shadow: 0 0 " + s + " " + n + "; } 100% { color: " + n + "; text-shadow: 0 0 " + s + " " + n + ", 0 0 " + s + " " + n + ", 0 0 " + s + " " + n + "; } }", a = e("<style>").text(i), e("head").append(a), e(this).find(".highlight").css("animation", o + " 1.5s ease-in-out infinite alternate")
        }), f = document.querySelectorAll(".pxl-wobble"), f.forEach(function(e) {
            e.addEventListener("mouseover", function() {
                if (!e.classList.contains("animating") && !e.classList.contains("mouseover")) {
                    e.classList.add("animating", "mouseover");
                    var t, s, n = e.innerText.split("");
                    setTimeout(function() {
                        e.classList.remove("animating")
                    }, (n.length + 1) * 50), t = e.dataset.animation, t || (t = "pxl-jump"), e.innerText = "", n.forEach(function(t) {
                        t == " " && (t = "&nbsp;"), e.innerHTML += '<span class="letter">' + t + "</span>"
                    }), s = e.querySelectorAll(".letter"), s.forEach(function(e, n) {
                        setTimeout(function() {
                            e.classList.add(t)
                        }, 50 * n)
                    })
                }
            }), e.addEventListener("mouseout", function() {
                e.classList.remove("mouseover")
            })
        }), e(".pxl-show-grid").append('<div class="pxl-grid-lines"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></div>'), e(".pxl-show-grid-yes").append('<div class="pxl-grid-lines"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></div>'), e(".pxl-grid-mobile-yes").each(function() {
            e(this).find(".pxl-grid-lines").addClass("grid-mobile")
        }), e(".widget-title, .wp-block-group__inner-container > h2, .single-post #comments .comments-title, .single-post .comment-respond .comment-reply-title, .cart_totals > h2, #customer_details .woocommerce-billing-fields > h3, #order_review_heading, .woocommerce-additional-fields > h3").append('<span class="title-line"></span>'), e(".pxl-hide-scroll-bar").each(function() {
            e("body").addClass("pxl-hide-scroll-bar")
        }), e(".pxl-header-icon-white-darkmode").each(function() {
            e("header .pxl-iconwhite-indark").addClass("pxl-color-white")
        }), e("section").hasClass("pxl-header-mb-blur") && e("#pxl-header-mobile").css("backdrop-filter", "blur(10px)"), e("section").hasClass("pxl-header-mb-white") && e("#pxl-header-mobile .pxl-header-branding .logo-dark").css({
            opacity: 1,
            visibility: "visible"
        }), e(".pxl-menu-parallax").each(function() {
            const t = e(this),
                o = t.find(".menu-parallax"),
                n = t.find("div:nth-child(1) > ul > li"),
                s = n.length,
                i = 100 / s,
                a = 10 / s;
            o.hover(function() {
                t.addClass("active")
            }, function() {
                t.removeClass("active")
            });

            function r() {
                n.each(function(n) {
                    const o = n * i,
                        r = 50 - (s - 1 - n) * a;
                    e(this).on("mouseover", function() {
                        t.css("--pattern-position", `0% ${o}%`), t.css("--image-position", `${r}% bottom`)
                    })
                })
            }
            r(), n.on("mouseover", function() {
                t.attr("data-active-index", e(this).index())
            })
        })
    });

    function b() {
        "use strict";
        e(document).on("click", ".pxl-anchor.side-panel", function(t) {
            t.preventDefault(), t.stopPropagation();
            var n = e(this).attr("data-target");
            e(this).toggleClass("cliked"), e(n).toggleClass("open"), e("body").toggleClass("side-panel-open"), e(n).next(".pxl-overlay-drop").toggleClass("panel-open"), setTimeout(function() {
                e(document).find('.pxl-search-form input[name="s"]').focus(), e(document).find('.search-form input[name="s"]').focus()
            }, 1e3)
        }), e(document).on("click", ".custom-link.anchor", function(t) {
            t.preventDefault(), t.stopPropagation();
            var n = e(this).attr("data-target");
            e(this).toggleClass("cliked"), e(n).toggleClass("anchor-target-open"), e(".pxl-anchor-bg").toggleClass("anchor-bg-open")
        }), e(".pxl-menu-primary li").each(function() {
            var n, s, o, t = e(this).find("> ul.sub-menu");
            t.length == 1 && (n = t.offset().left, s = t.width(), o = e(window).width(), (n + s > o || n < 0) && t.addClass("back"))
        })
    }

    function A() {
        e(document).on("click", function(t) {
            var n = e(t.target),
                s = ".btn-nav-mobile";
            !n.is(s) && n.closest(".pxl-hidden-template").length <= 0 && e("body").hasClass("side-panel-open") && (e(".btn-nav-mobile").removeClass("cliked"), e(".pxl-hidden-template").removeClass("open"), e("body").removeClass("side-panel-open"), e(".pxl-overlay-drop").removeClass("panel-open"))
        }), e(document).on("click", ".pxl-close", function(t) {
            t.preventDefault(), t.stopPropagation(), e(this).closest(".pxl-hidden-template").toggleClass("open"), e(".btn-nav-mobile").removeClass("cliked"), e("body").toggleClass("side-panel-open")
        }), e(document).on("click", ".pxl-close-drop", function(t) {
            t.preventDefault(), t.stopPropagation(), e(".pxl-overlay-drop").removeClass("panel-open")
        })
    }

    function y(t, n) {
        var s = e(n).width(),
            o = e(n).height(),
            i = (t.pageX - e(n).offset().left - s / 2) * (s > o ? o / s : 1),
            a = (t.pageY - e(n).offset().top - o / 2) * (o > s ? s / o : 1),
            r = Math.round(Math.atan2(a, i) / 1.57079633 + 5) % 4;
        return r
    }

    function l(t, n, s) {
        var i = y(t, n),
            o = null;
        switch (e(n).removeAttr("class"), i) {
            case 0:
                o = "-top";
                break;
            case 1:
                o = "-right";
                break;
            case 2:
                o = "-bottom";
                break;
            case 3:
                o = "-left";
                break
        }
        e(n).addClass(s + o)
    }
    e.fn.ctDeriction = function() {
        this.each(function() {
            e(this).on("mouseenter", function(e) {
                l(e, this, "in")
            }), e(this).on("mouseleave", function(e) {
                l(e, this, "out")
            })
        })
    }, e(".pxl-grid-direction .item-direction").ctDeriction();

    function d() {
        e("#pxl-header-elementor").hasClass("is-sticky") ? (t > 147 ? (e(".pxl-header-elementor-sticky.pxl-sticky-stb").addClass("pxl-header-fixed"), e(".sticky-col").css("top", "100px")) : (e(".pxl-header-elementor-sticky.pxl-sticky-stb").removeClass("pxl-header-fixed"), e(".sticky-col").css("top", "")), i == "up" && t > 147 ? (e(".pxl-header-elementor-sticky.pxl-sticky-stt").addClass("pxl-header-fixed"), e(".sticky-col").css("top", "100px")) : (e(".pxl-header-elementor-sticky.pxl-sticky-stt").removeClass("pxl-header-fixed"), e(".sticky-col").css("top", ""))) : e(".sticky-col").css("top", ""), e(".pxl-header-elementor-sticky").parents("body").addClass("pxl-header-sticky")
    }

    function u() {
        e(".pxl-scroll-top").addClass("pxl-hover-transition"), t < n && e(".pxl-scroll-top").addClass("pxl-off").removeClass("pxl-on"), t > n && e(".pxl-scroll-top").addClass("pxl-on").removeClass("pxl-off")
    }

    function h() {
        setTimeout(function() {
            var t = e(".pxl-footer-fixed #pxl-footer-elementor").outerHeight() - 1;
            e(".pxl-footer-fixed #pxl-main").css("margin-bottom", t + "px")
        }, 600)
    }

    function m() {
        e("#pxl-main .quantity").append('<span class="quantity-icon"><i class="quantity-down">-</i><i class="quantity-up">+</i></span>'), e(".quantity-up").on("click", function() {
            e(this).parents(".quantity").find('input[type="number"]').get(0).stepUp(), e(this).parents(".woocommerce-cart-form").find(".actions .button").removeAttr("disabled")
        }), e(".quantity-down").on("click", function() {
            e(this).parents(".quantity").find('input[type="number"]').get(0).stepDown(), e(this).parents(".woocommerce-cart-form").find(".actions .button").removeAttr("disabled")
        }), e(".woocommerce-cart-form .actions .button").removeAttr("disabled")
    }

    function O() {
        e(document).on("mousedown", ".pro-variation-select", function(t) {
            t.preventDefault();
            var s, i = e(this).closest(".variations"),
                o = e(this).closest(".pxl-variation-att-terms"),
                a = i.find("#" + o.attr("data-id")),
                n = e(this);
            if (!n.hasClass("custom-vari-enabled")) return;
            if (s = n.attr("data-value"), !s) return;
            a.val(s).change(), o.find("li.pxl-vari-item").removeClass("active"), n.parent("li").addClass("active")
        })
    }

    function g() {
        setTimeout(() => {
            e(".pxl-tab-carousel .pxl-item--content:not(:first-child)").css({
                display: "none"
            })
        }, 1e3)
    }

    function c() {
        var n = e(".pxl-check-scroll .pxl-grid-item, .pxl-image-single1, .pxl-item--title, .pxl-item-check-scroll"),
            s = t + e(window).height();
        n.each(function() {
            var n = e(this),
                o = n.offset().top,
                i = o + n.outerHeight();
            o < s && i > t ? n.addClass("visible") : n.removeClass("visible"), e(".filter-item").click(function() {
                n.removeClass("visible"), n.addClass("visible")
            })
        })
    }

    function a() {
        e(".pxl-post-layout-post-1").each(function() {
            var n, s = e(this),
                t = s.find(".pxl-grid-item");
            s.hover(function() {
                var e = s.find(".pxl-grid-item")
            }), t.find(".item--count.show").removeClass("deactive"), t.find(".pxl-item--inner, .item--overlay").css({
                "min-height": "0px"
            }), n = 0, t.each(function() {
                var t = e(this).find(".pxl-item--inner").height();
                t > n && (n = t)
            }), t.find(".pxl-item--inner, .item--overlay").css({
                "min-height": n
            }), setTimeout(function() {
                t.find(".item--count.show").addClass("deactive")
            }, 1e3)
        })
    }

    function M() {
        var n = e(".slide-draw-svg svg"),
            s = t + e(window).height();
        n.each(function() {
            var n = e(this),
                o = n.offset().top,
                i = o + n.outerHeight(),
                a = n.find("path");
            a.each(function() {
                var a = e(this),
                    r = this.getTotalLength();
                a.attr("stroke-dasharray", r), a.css("stroke-dashoffset", r), e(window).on("scroll", function() {
                    if (o < s && i > t) {
                        n.addClass("visible");
                        var c = (t - o) / (n.outerHeight() - e(window).height()) * 100,
                            l = c <= 100 ? 0 : r;
                        a.css("stroke-dashoffset", l)
                    } else n.removeClass("visible")
                })
            })
        })
    }

    function j() {
        e(".el-parallax-wrap").on({
            mouseenter: function() {
                const t = e(this);
                t.addClass("hovered"), t.find(".el-parallax-item").css({
                    transition: "none"
                })
            },
            mouseleave: function() {
                const t = e(this);
                t.removeClass("hovered"), t.find(".el-parallax-item").css({
                    transition: "transform 0.5s ease",
                    transform: "translate3d(0px, 0px, 0px)"
                })
            },
            mousemove: function(t) {
                const s = e(this),
                    n = this.getBoundingClientRect(),
                    o = n.left + n.width / 2,
                    i = n.top + n.height / 2,
                    a = (o - t.clientX) * .07104,
                    r = (i - t.clientY) * .10656;
                requestAnimationFrame(() => {
                    s.find(".el-parallax-item").css({
                        transform: `translate3d(${a}px, ${r}px, 0px)`
                    })
                })
            }
        })
    }

    function o() {
        e(".pixel_stretch").each(function() {
            var t = e(this).find(".pxl-grid-item");
            t.each(function() {
                var t = e(this).find(".item--featured"),
                    n = e(this).find(".item--featured img").width();
                t.css("--pg-img-width", n + "px")
            })
        })
    }

    function _() {
        let t = localStorage.getItem("mode");
        const n = e(".pxl-switch-button");
        var s = window.location.pathname,
            o = s.endsWith("/landing/");
        if (o) n.css("opacity", "0"), t = "dark";
        else {
            const n = new URLSearchParams(window.location.search),
                e = n.get("color");
            (e === "v-dark" || e === "v-light") && (t = e === "v-light" ? "light" : "dark")
        }
        t && t === "light" && e("body").removeClass("dark-mode"), t && t === "dark" && e("body").addClass("dark-mode"), n.on("click", function() {
            if (e("body").toggleClass("dark-mode"), !e("body").hasClass("dark-mode")) return localStorage.setItem("mode", "light");
            localStorage.setItem("mode", "dark")
        })
    }

    function w() {
        e("#pxl-loadding").is(".style-text, .style-home-assistant") ? e("#pxl-loadding").addClass("hide") : e(".pxl-loader").fadeOut("slow")
    }

    function v() {
        var t, n, s = `#ifdef GL_ES
    precision mediump float;
    #endif

    attribute vec3 aVertexPosition;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;

    uniform mat4 texture0Matrix;
    uniform mat4 texture1Matrix;
    uniform mat4 mapMatrix;

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord0;
    varying vec2 vTextureCoord1;
    varying vec2 vTextureCoordMap;

    void main() {
        vec3 vertexPosition = aVertexPosition;

        gl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);

        vTextureCoord0 = (texture0Matrix * vec4(aTextureCoord, 0., 1.)).xy;
        vTextureCoord1 = (texture1Matrix * vec4(aTextureCoord, 0., 1.)).xy;
        vTextureCoordMap = (mapMatrix * vec4(aTextureCoord, 0., 1.)).xy;
        vVertexPosition = vertexPosition;
    }`,
            o = `#ifdef GL_ES
    precision mediump float;
    #endif

    #define PI2 6.28318530718
    #define PI 3.14159265359
    #define S(a,b,n) smoothstep(a,b,n)

    uniform float uTime;
    uniform float uProgress;
    uniform vec2 uReso;
    uniform vec2 uMouse;

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord0;
    varying vec2 vTextureCoord1;
    varying vec2 vTextureCoordMap;

    uniform sampler2D texture0;
    uniform sampler2D texture1;
    uniform sampler2D map;

    float exponentialEasing (float x, float a){

        float epsilon = 0.00001;
        float min_param_a = 0.0 + epsilon;
        float max_param_a = 1.0 - epsilon;
        a = max(min_param_a, min(max_param_a, a));

        if (a < 0.5){
            a = 2.0 * a;
            float y = pow(x, a);
            return y;
        } else {
            a = 2.0 * (a-0.5);
            float y = pow(x, 1.0 / (1.-a));
            return y;
        }
    }

    vec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {
        vec4 color = vec4(0.0);
        vec2 off1 = vec2(1.411764705882353) * direction;
        vec2 off2 = vec2(3.2941176470588234) * direction;
        vec2 off3 = vec2(5.176470588235294) * direction;
        color += texture2D(image, uv) * 0.1964825501511404;
        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;
        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;
        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;
        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;
        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;
        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;
        return color;
    }

    void main(){
        vec2 uv0 = vTextureCoord0;
        vec2 uv1 = vTextureCoord1;

        float progress0 = uProgress;
        float progress1 = 1. - uProgress;

        vec4 map = blur13(map, vTextureCoordMap, uReso, vec2(2.)) + 0.5;

        uv0.x += progress0 * map.r;
        uv1.x -= progress1 * map.r;

        vec4 color = texture2D( texture0, uv0 );
        vec4 color1 = texture2D( texture1, uv1 );

        gl_FragColor = mix(color, color1, progress0 );
    }`;
        class i {
            constructor(e) {
                this.canvas = e.canvas, this.webGLCurtain = new Curtains({
                    container: this.canvas,
                    watchScroll: !1,
                    pixelRatio: Math.min(1.5, window.devicePixelRatio)
                }), this.planeElement = e.planeElement, this.mouse = {
                    x: 0,
                    y: 0
                }, this.params = {
                    vertexShader: s,
                    fragmentShader: o,
                    widthSegments: 40,
                    heightSegments: 40,
                    uniforms: {
                        time: {
                            name: "uTime",
                            type: "1f",
                            value: 0
                        },
                        mousepos: {
                            name: "uMouse",
                            type: "2f",
                            value: [0, 0]
                        },
                        resolution: {
                            name: "uReso",
                            type: "2f",
                            value: [innerWidth, innerHeight]
                        },
                        progress: {
                            name: "uProgress",
                            type: "1f",
                            value: 0
                        }
                    }
                }, this.initPlane()
            }
            initPlane() {
                this.plane = this.webGLCurtain.addPlane(this.planeElement, this.params), this.plane && this.plane.onReady(() => {
                    this.update(), this.initEvent()
                })
            }
            update() {
                this.plane.onRender(() => {
                    this.plane.uniforms.time.value += .01, this.plane.uniforms.resolution.value = [innerWidth, innerHeight]
                })
            }
            initEvent() {
                this.planeElement.addEventListener("mouseenter", e => {
                    gsap.to(this.plane.uniforms.progress, .8, {
                        value: 1
                    })
                }), this.planeElement.addEventListener("mouseout", e => {
                    gsap.to(this.plane.uniforms.progress, .8, {
                        value: 0
                    })
                })
            }
        }(navigator.userAgent.indexOf("Safari") == -1 || navigator.userAgent.indexOf("Chrome") > -1) && e(".pxl-image-box1.normal").each(function() {
            const t = e(this),
                n = t.find(".canvas")[0],
                s = t.find(".item--image")[0],
                o = t.data("initialized");
            !o && n && s && (new i({
                canvas: n,
                planeElement: s
            }), t.data("initialized", !0))
        }), t = `#ifdef GL_ES
    precision mediump float;
    #endif

    attribute vec3 aVertexPosition;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;

    varying vec2 vTextureCoord;

    void main() {
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);

        vTextureCoord = aTextureCoord;
    }`, n = `
    #ifdef GL_ES
    precision mediump float;
    #endif

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord;

    uniform float uTime;

    uniform sampler2D planeTexture;

    void main() {
        vec2 textureCoord = vTextureCoord;

        const float PI = 3.141592;

        textureCoord.x += (
        sin(textureCoord.x * 2.5 + ((uTime * (PI / 3.0)) * 0.031))
        + sin(textureCoord.y * 2.5 + ((uTime * (PI / 2.489)) * 0.017))
        ) * 0.0075;

        textureCoord.y += (
        sin(textureCoord.y * 2.5 + ((uTime * (PI / 2.023)) * 0.023))
        + sin(textureCoord.x * 2.5 + ((uTime * (PI / 3.1254)) * 0.037))
        ) * 0.0125;

        gl_FragColor = texture2D(planeTexture, textureCoord);
    }
    `;
        class a {
            constructor(e) {
                this.canvas = e.canvas, this.webGLCurtain = new Curtains({
                    container: this.canvas,
                    watchScroll: !1,
                    pixelRatio: Math.min(1.5, window.devicePixelRatio)
                }), this.planeElement = e.planeElement, this.mouse = {
                    x: 0,
                    y: 0
                }, this.params = {
                    vertexShader: t,
                    fragmentShader: n,
                    widthSegments: 40,
                    heightSegments: 40,
                    uniforms: {
                        time: {
                            name: "uTime",
                            type: "1f",
                            value: 0
                        },
                        mousepos: {
                            name: "uMouse",
                            type: "2f",
                            value: [0, 0]
                        },
                        resolution: {
                            name: "uReso",
                            type: "2f",
                            value: [innerWidth, innerHeight]
                        },
                        progress: {
                            name: "uProgress",
                            type: "1f",
                            value: 0
                        }
                    }
                }, this.initPlane()
            }
            initPlane() {
                this.plane = this.webGLCurtain.addPlane(this.planeElement, this.params), this.plane && this.plane.onReady(() => {
                    this.update(), this.initEvent()
                })
            }
            update() {
                this.plane.onRender(() => {
                    this.plane.uniforms.resolution.value = [innerWidth, innerHeight]
                })
            }
            initEvent() {
                let e = !1;
                this.planeElement.addEventListener("mouseenter", t => {
                    e = !0
                }), this.planeElement.addEventListener("mouseout", t => {
                    e = !1
                }), this.plane.onRender(() => {
                    e && this.plane.uniforms.time.value++
                })
            }
        }(navigator.userAgent.indexOf("Safari") == -1 || navigator.userAgent.indexOf("Chrome") > -1) && e(".pxl-image-box1.expo").each(function() {
            const t = e(this),
                n = t.find(".canvas")[0],
                s = t.find(".item--image")[0],
                o = t.data("initialized");
            !o && n && s && (new a({
                canvas: n,
                planeElement: s
            }), t.data("initialized", !0))
        });
        const r = `
    precision mediump float;

    attribute vec3 aVertexPosition;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord;

    uniform float uTime;

    void main() {
        vec3 vertexPosition = aVertexPosition;

        float waveCoords = ((uTime / 45.0) * 3.5) - 1.75;

        float distanceToWave = distance(vec2(vertexPosition.x, 0.0), vec2(waveCoords, 0.0));

        vertexPosition.z -= (cos(clamp(distanceToWave, 0.0, 0.75) * 3.141592) - cos(0.75 * 3.141592) + (2.0 * sin(3.141592 * uTime / 90.0))) * 0.025;

        gl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);

        vTextureCoord = aTextureCoord;
        vVertexPosition = vertexPosition;
    }
    `,
            c = `precision mediump float;

    uniform float uTime;

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord;

    uniform sampler2D uExample;


    void main() {

        vec2 textureCoords = vec2(vTextureCoord.x, vTextureCoord.y);
        vec4 finalColor = texture2D(uExample, textureCoords);

        gl_FragColor = finalColor;
    }`;
        class l {
            constructor(e) {
                this.canvas = e.canvas, this.webGLCurtain = new Curtains({
                    container: this.canvas,
                    watchScroll: !1,
                    pixelRatio: Math.min(1.5, window.devicePixelRatio)
                }), this.planeElement = e.planeElement, this.mouse = {
                    x: 0,
                    y: 0
                }, this.params = {
                    vertexShader: r,
                    fragmentShader: c,
                    widthSegments: 40,
                    heightSegments: 40,
                    uniforms: {
                        time: {
                            name: "uTime",
                            type: "1f",
                            value: 0
                        },
                        resolution: {
                            name: "uReso",
                            type: "2f",
                            value: [innerWidth, innerHeight]
                        }
                    }
                }, this.initPlane()
            }
            initPlane() {
                this.plane = this.webGLCurtain.addPlane(this.planeElement, this.params), this.plane && this.plane.onReady(() => {
                    this.update(), this.initEvent()
                })
            }
            update() {
                this.plane.onRender(() => {
                    this.plane.uniforms.time.value += .01, this.plane.uniforms.resolution.value = [innerWidth, innerHeight]
                })
            }
            initEvent() {
                let e = !1;
                this.planeElement.addEventListener("mouseenter", t => {
                    e = !0
                }), this.planeElement.addEventListener("mouseout", t => {
                    e = !1
                }), this.plane.onRender(() => {
                    e ? this.plane.uniforms.time.value += (45 - this.plane.uniforms.time.value) * .0375 : this.plane.uniforms.time.value += (0 - this.plane.uniforms.time.value) * .0375
                })
            }
        }(navigator.userAgent.indexOf("Safari") == -1 || navigator.userAgent.indexOf("Chrome") > -1) && e(".pxl-image-box1.wave").each(function() {
            const t = e(this),
                n = t.find(".canvas")[0],
                s = t.find(".item--image")[0],
                o = t.data("initialized");
            !o && n && s && (new l({
                canvas: n,
                planeElement: s
            }), t.data("initialized", !0))
        }), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) && e(".pxl-image-box1 .image-front").css("opacity", "1")
    }

    function x() {
        if (e("#showcase-slider-holder").length > 0) {
            var r = new ScrollMagic.Controller,
                c = e(this),
                n = e("#showcase-slider-holder"),
                o = .3,
                t = n.find(".pxl-swiper-container").data().settings,
                i = new Swiper("#showcase-slider .pxl-swiper-container", {
                    direction: t.slide_direction,
                    effect: t.slide_mode,
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    slidesPerView: t.slides_to_show,
                    slidesPerGroup: t.slides_to_scroll,
                    slidesPerColumn: t.slide_percolumn,
                    grabCursor: !1,
                    resistance: !0,
                    resistanceRatio: .5,
                    allowTouchMove: !0,
                    speed: t.speed,
                    autoplay: !1,
                    mousewheel: !0,
                    parallax: !0,
                    navigation: {
                        nextEl: ".pxl-swiper-arrow-next",
                        prevEl: ".pxl-swiper-arrow-prev"
                    },
                    pagination: {
                        type: t.pagination_type,
                        el: n.find(".pxl-swiper-dots")[0],
                        clickable: !0,
                        modifierClass: "pxl-swiper-pagination-",
                        bulletClass: "pxl-swiper-pagination-bullet",
                        renderCustom: function(e, t, n, s) {
                            return n + " of " + s
                        }
                    },
                    on: {
                        progress: function(e) {
                            for (var n, s, i, e = this, t = 0; t < e.slides.length; t++) n = e.slides[t].progress, s = e.height * o, i = n * s, e.slides[t].querySelector(".img-mask").style.transform = "translate3d(0," + i + "px, 0)"
                        },
                        touchStart: function(e) {
                            for (var e = this, t = 0; t < e.slides.length; t++) e.slides[t].style.transition = ""
                        },
                        setTransition: function(e) {
                            var n, s = this;
                            e = t.speed;
                            for (n = 0; n < s.slides.length; n++) s.slides[n].style.transition = e + "ms", s.slides[n].querySelector(".img-mask").style.transition = e + "ms"
                        },
                        slideChangeTransitionStart: function() {
                            e("#showcase-slider .pxl-swiper-slide").find(".slide-title").each(function() {
                                e(this).removeClass("active-title")
                            }), s()
                        },
                        slideChangeTransitionEnd: function() {
                            e("#showcase-slider .swiper-slide-active").find(".slide-title").each(function() {
                                e(this).addClass("active-title")
                            }), e("#showcase-slider .swiper-slide-duplicate-active").find(".slide-title").each(function() {
                                e(this).addClass("active-title")
                            })
                        }
                    }
                }),
                a = new Swiper("#showcase-slider-lists .pxl-swiper-container", {
                    speed: 700,
                    spaceBetween: 0,
                    slidesPerView: "auto",
                    direction: "vertical",
                    effect: "slide",
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    longSwipes: !0,
                    longSwipesRatio: .5,
                    touchRatio: 3,
                    longSwipesMs: 0,
                    centeredSlides: !0,
                    mousewheel: !0,
                    parallax: !0
                });

            function s() {
                var s = e("#showcase-slider-holder").width(),
                    t = e(".swiper-slide-active .slide-title").width(),
                    n = s / 2 - 120;
                e(".caption-border.left").css({
                    width: n - t / 2 + "px",
                    opacity: 1
                }), e(".caption-border.right").css({
                    width: n - t / 2 + "px",
                    opacity: 1
                })
            }
            s(), i.controller.control = a
        }
    }

    function C() {
        if (e("#showcase-slider-holder2").length > 0) {
            var a = new ScrollMagic.Controller,
                r = e(this),
                n = e("#showcase-slider-holder2"),
                i = .3,
                t = n.find(".pxl-swiper-container").data().settings,
                s = new Swiper("#showcase-slider .pxl-swiper-container", {
                    direction: t.slide_direction,
                    effect: t.slide_mode,
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    slidesPerView: t.slides_to_show,
                    slidesPerGroup: t.slides_to_scroll,
                    slidesPerColumn: t.slide_percolumn,
                    grabCursor: !1,
                    resistance: !0,
                    resistanceRatio: .5,
                    allowTouchMove: !0,
                    speed: t.speed,
                    autoplay: t.autoplay,
                    parallax: !0,
                    navigation: {
                        nextEl: ".pxl-swiper-arrow-next",
                        prevEl: ".pxl-swiper-arrow-prev"
                    },
                    pagination: {
                        type: t.pagination_type,
                        el: n.find(".pxl-swiper-dots")[0],
                        clickable: !0,
                        modifierClass: "pxl-swiper-pagination-",
                        bulletClass: "pxl-swiper-pagination-bullet",
                        renderCustom: function(e, t, n, s) {
                            return n + " of " + s
                        }
                    },
                    on: {
                        progress: function(e) {
                            for (var n, s, o, e = this, t = 0; t < e.slides.length; t++) n = e.slides[t].progress, s = e.width * i, o = n * s, e.slides[t].querySelector(".img-mask-slide").style.transform = "translate3d(" + o + "px,0, 0)"
                        },
                        touchStart: function(e) {
                            for (var e = this, t = 0; t < e.slides.length; t++) e.slides[t].style.transition = ""
                        },
                        setTransition: function(e) {
                            var n, s = this;
                            e = t.speed;
                            for (n = 0; n < s.slides.length; n++) s.slides[n].style.transition = e + "ms", s.slides[n].querySelector(".img-mask-slide").style.transition = e + "ms"
                        },
                        slideChangeTransitionStart: function() {
                            e("#showcase-slider .pxl-swiper-slide").find(".slide-title").each(function() {
                                e(this).removeClass("active-title")
                            })
                        },
                        slideChangeTransitionEnd: function() {
                            e("#showcase-slider .swiper-slide-active").find(".slide-title").each(function() {
                                e(this).addClass("active-title")
                            }), e("#showcase-slider .swiper-slide-duplicate-active").find(".slide-title").each(function() {
                                e(this).addClass("active-title")
                            })
                        }
                    }
                }),
                o = new Swiper("#showcase-slider-lists .pxl-swiper-container", {
                    speed: 1e3,
                    spaceBetween: 136,
                    slidesPerView: 2,
                    slidesPerColumn: 1,
                    direction: "horizontal",
                    effect: "slide",
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    autoplay: t.autoplay,
                    touchRatio: 3,
                    parallax: !0,
                    breakpoints: {
                        0: {
                            spaceBetween: 20,
                            slidesPerView: 1
                        },
                        576: {
                            spaceBetween: 20,
                            slidesPerView: 1
                        },
                        768: {
                            spaceBetween: 40
                        },
                        992: {
                            spaceBetween: 40
                        },
                        1280: {
                            spaceBetween: 80
                        }
                    }
                });
            s.controller.control = o, o.controller.control = s
        }
    }

    function E() {
        if (e("#showcase-slider-holder1").length > 0) {
            var a = new ScrollMagic.Controller,
                r = e(this),
                n = e("#showcase-slider-holder1"),
                c = .3,
                t = n.find(".pxl-swiper-container").data().settings,
                o = new Swiper("#showcase-slider .pxl-swiper-container", {
                    direction: t.slide_direction,
                    effect: t.slide_mode,
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    slidesPerView: t.slides_to_show,
                    slidesPerGroup: t.slides_to_scroll,
                    slidesPerColumn: t.slide_percolumn,
                    grabCursor: !1,
                    resistance: !0,
                    resistanceRatio: .5,
                    speed: t.speed,
                    loop: !0,
                    spaceBetween: document.querySelector(".pxl-portfolio-carousel3 #showcase-slider .pxl-swiper-container") ? 0 : 27,
                    allowTouchMove: !0,
                    speed: t.speed,
                    autoplay: t.autoplay,
                    mousewheel: !0,
                    parallax: !0,
                    navigation: {
                        nextEl: ".pxl-swiper-arrow-next",
                        prevEl: ".pxl-swiper-arrow-prev"
                    },
                    pagination: {
                        type: t.pagination_type,
                        el: n.find(".pxl-swiper-dots")[0],
                        clickable: !0,
                        modifierClass: "pxl-swiper-pagination-",
                        bulletClass: "pxl-swiper-pagination-bullet",
                        renderCustom: function(e, t, n, s) {
                            return n + " of " + s
                        }
                    },
                    on: {
                        touchStart: function(e) {
                            for (var e = this, t = 0; t < e.slides.length; t++) e.slides[t].style.transition = ""
                        },
                        setTransition: function(e) {
                            var n, s = this;
                            e = t.speed;
                            for (n = 0; n < s.slides.length; n++) s.slides[n].style.transition = e + "ms"
                        }
                    }
                }),
                s = new Swiper("#showcase-slider-captions .pxl-swiper-container", {
                    speed: 1e3,
                    spaceBetween: document.querySelector(".pxl-portfolio-carousel3 #showcase-slider .pxl-swiper-container") ? 0 : 27,
                    slidesPerView: 3,
                    direction: "vertical",
                    longSwipes: !0,
                    effect: "slide",
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    longSwipesRatio: .5,
                    touchRatio: 3,
                    loop: !0,
                    longSwipesMs: 0,
                    mousewheel: !0,
                    parallax: !0
                }),
                i = new Swiper("#showcase-slider-lists .pxl-swiper-container", {
                    speed: 1e3,
                    spaceBetween: document.querySelector(".pxl-portfolio-carousel3 #showcase-slider .pxl-swiper-container") ? 0 : 27,
                    slidesPerView: 3,
                    direction: "vertical",
                    effect: "slide",
                    wrapperClass: "pxl-swiper-wrapper",
                    slideClass: "pxl-swiper-slide",
                    longSwipes: !0,
                    longSwipesRatio: .5,
                    touchRatio: 3,
                    loop: !0,
                    longSwipesMs: 0,
                    mousewheel: !0,
                    parallax: !0
                });
            o.controller.control = s, s.controller.control = i
        }
    }

    function k() {
        gsap.set(e("#showcase-slider-holder,#showcase-slider-holder2"), {
            opacity: 0,
            scale: 1
        }), gsap.to(e("#showcase-slider-holder,#showcase-slider-holder2"), {
            duration: .7,
            opacity: 1,
            delay: .6,
            ease: Power2.easeOut
        }), gsap.set(e(".pxl-swiper-arrow-prev, .pxl-swiper-arrow-next, .swiper-pagination-bullet, .arrows-wrap"), {
            opacity: 0
        }), gsap.to(e(".pxl-swiper-arrow-prev"), {
            duration: .7,
            force3D: !0,
            y: 0,
            opacity: 1,
            rotation: 0,
            delay: 1.2,
            ease: Power2.easeOut
        }), gsap.to(e(".swiper-pagination-bullet, .arrows-wrap, .carousel-allprojects-wrapper"), {
            duration: .7,
            force3D: !0,
            y: 0,
            opacity: 1,
            rotation: 0,
            delay: 1.1,
            ease: Power2.easeOut
        }), gsap.to(e(".pxl-swiper-arrow-next"), {
            duration: .7,
            force3D: !0,
            y: 0,
            opacity: 1,
            rotation: 0,
            delay: 1.2,
            ease: Power2.easeOut
        }), gsap.to(e("#showcase-slider-holder .pxl-swiper-slide .slide-title span,#showcase-slider-holder2 .pxl-swiper-slide .slide-title span"), {
            duration: 1,
            force3D: !0,
            y: 0,
            opacity: 1,
            delay: .8,
            ease: Power2.easeOut
        }), setTimeout(function() {
            e("#showcase-slider-holder,#showcase-slider-holder2").addClass("loaded")
        }, 1500);
        var t = gsap.timeline();
        e(".slide-small-title span").each(function(e, n) {
            t.to(n, {
                duration: .5,
                force3D: !0,
                y: 0,
                opacity: 1,
                delay: 1,
                ease: Power2.easeOut
            }, e * .05)
        })
    }

    function r() {
        var t, n = !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Nokia|Opera Mini/i.test(navigator.userAgent);
        n ? e("body").addClass("is-mobile") : e("body").removeClass("is-mobile"), t = e(".pxl-draw-svg svg path"), t.each(function() {
            var t = this.getTotalLength();
            return e(this).attr("stroke-dasharray", t), t
        }), e(".pxl-draw-svg svg path").each(function() {
            var n, s, o, i, a, t = e(this).attr("stroke-dasharray");
            e(this).css({
                "stroke-dasharray": t,
                "stroke-dashoffset": t
            }), s = "path_" + Math.floor(Math.random() * 1e6), e(this).attr("id", s), o = e(this).attr("id"), n = "drawAnimation_" + o, i = "@keyframes " + n + " { from { stroke-dashoffset: " + t + "; } to { stroke-dashoffset: 0; } }", a = e("<style>").text(i), e("head").append(a), e(this).css({
                "animation-name": n,
                "animation-duration": "2s",
                "animation-timing-function": "ease",
                "animation-fill-mode": "forwards",
                "animation-iteration-count": "infinite"
            })
        }), e(".pxl-section-overlay-scroll").each(function() {
            e(this).find(".elementor-background-overlay").addClass("element-scroll")
        }), e(".pxl-section-scroll").each(function() {
            gsap.registerPlugin(ScrollTrigger);
            const t = () => {
                document.body.style.overflow = "auto";
                var t = e(this).prev("section");
                gsap.utils.toArray(e(this).find(".element-scroll")).forEach((n) => {
                    const o = n;
                    var i = o.scrollWidth * -1,
                        a = 0;
                    e(n).closest(".pxl-section-scroll").hasClass("revesal") && (i = "100%", a = (o.scrollWidth + 50 - n.offsetWidth) * -1), gsap.fromTo(o, {
                        x: i
                    }, {
                        x: a,
                        scrollTrigger: {
                            trigger: t,
                            start: "top 10%",
                            end: "bottom 50%",
                            scrub: .5
                        }
                    })
                })
            };
            t()
        })
    }

    function S() {
        var t = window.pageYOffset || document.documentElement.scrollTop,
            n = 0,
            s = jQuery("header"),
            e = s.find(".header-mobile-fixed");
        t > n ? e.addClass("smaller") : e.hasClass("smaller") && e.removeClass("smaller")
    }

    function f() {
        var t = 0;
        e(".pxl-item-single-post .pxl-post--navigation .nav--title").each(function() {
            var n = e(this).height();
            n > t && (t = n)
        }), e(".pxl-item-single-post .pxl-post--navigation .nav--line").css("height", t), e(".woocommerce .nice-select").each(function() {
            var t = e(".woocommerce .products:not(.pxl-products-list) .woocommerce-product-inner").width();
            e(this).css("min-width", t), e("ul").hasClass("pxl-products-list") && e(this).css({
                "min-width": "270px"
            })
        }), e(".woocommerce .woocommerce-summary-wrap.row .flex-control-nav").each(function() {
            var t, n = e(this).find("li").length;
            n >= 4 && (e(this).addClass("pxl-custom-scroll"), t = e(this).parent().height(), e(this).css("max-height", t))
        }), e(".blog-list-scroll").each(function() {
            var t = e(this).find(".pxl-grid-item").height(),
                n = t * 2 + 40;
            e(this).find(".pxl-blog-inner").css("max-height", n), e(".blog-list-scroll .pxl-blog-inner").overlayScrollbars({
                className: "os-theme-thick-dark",
                overflowBehavior: {
                    x: "hidden",
                    y: "scroll"
                }
            }), e(this).find(".pxl-blog-inner").hover(function() {
                e(this).find(".os-scrollbar-handle").addClass("pxl-scrollbar-transition")
            }), e(this).find(".pxl-blog-inner").mouseleave(function() {
                setTimeout(() => {
                    e(this).find(".os-scrollbar-handle").removeClass("pxl-scrollbar-transition")
                }, 300)
            })
        }), e(".pxl-grid-filter1").each(function() {
            var n = e(this).find(".filter-marker"),
                s = e(this).find(".filter-item"),
                t = e(this).find(".filter-item.active"),
                o = t.position().top;
            n.css({
                top: o + t.outerHeight(),
                left: t.position().left,
                width: t.outerWidth(),
                display: "block"
            }), s.mouseover(function() {
                var s = e(this),
                    i = s.position().top,
                    a = s.position().left,
                    r = s.outerWidth() || t.outerWidth(),
                    c = i == 0 ? 0 : i || o,
                    l = a == 0 ? 0 : a || t.position().left;
                n.stop().animate({
                    top: c + t.outerHeight(),
                    left: l,
                    width: r
                }, 300)
            }), s.on("click", function() {
                t = e(this)
            }), s.mouseleave(function() {
                var e = t.position().top;
                n.stop().animate({
                    top: e + t.outerHeight(),
                    left: t.position().left,
                    width: t.outerWidth()
                }, 300)
            })
        }), e(".pxl-slider-carousel3, .pxl-slider-carousel4").each(function() {
            var n = e(this),
                t = n.find(".pxl-swiper-slide");

            function s() {
                t.css("min-height", "");
                var n = 0;
                t.each(function() {
                    var t = e(this).outerHeight();
                    t > n && (n = t)
                }), t.css("min-height", n + "px")
            }
            s()
        }), e(".pxl-slider-carousel5").each(function() {
            e(this).find(".pxl-swiper-container").css("min-height", ""), e(this).hover(function() {
                var t = e(this).find(".pxl-swiper-container");
                t.each(function() {
                    var t = e(this).height();
                    e(this).css("min-height", t + "px")
                })
            })
        }), e(".pxl-slider-carousel6, .pxl-slider-carousel4.style2").each(function() {
            var n = e(this),
                t = n.find(".pxl-item--content");
            t.length > 0 && t.each(function() {
                var t = e(this);
                s > 767 && VanillaTilt.init(t[0], {
                    max: 3,
                    speed: 1e3,
                    scale: 1.01,
                    glare: !1,
                    "max-glare": .5,
                    perspective: 1400,
                    easing: "cubic-bezier(.03, .98, .52, .99)",
                    reset: !0
                })
            })
        })
    }
    e(document).ajaxComplete(function() {
        m(), a(), r(), setTimeout(function() {
            o()
        }, 500)
    })
})(jQuery)